{"remainingRequest":"D:\\vue-app\\blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\vue-app\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue-app\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue-app\\blog\\src\\views\\Topup.vue?vue&type=template&id=7fcdbce6&scoped=true&","dependencies":[{"path":"D:\\vue-app\\blog\\src\\views\\Topup.vue","mtime":1577088556951},{"path":"D:\\vue-app\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-app\\blog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\vue-app\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue-app\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}